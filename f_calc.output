Terminals unused in grammar

   '%'


Grammar

    0 $accept: expr $end

    1 expr: expr define '\n'
    2     | expr define_func '\n'
    3     | expr cond '\n'
    4     | expr '\n'
    5     | /* empty */

    6 define: ID '=' cond

    7 define_func: DEF ID '(' ID ',' ID ')' cond
    8            | DEF ID '(' ID ')' cond
    9            | DEF ID '(' ')' cond

   10 cond: num_expr '?' cond ':' cond
   11     | num_expr

   12 num_expr: NUM
   13         | ID
   14         | ID '(' num_expr ',' num_expr ')'
   15         | ID '(' num_expr ')'
   16         | ID '(' ')'
   17         | '-' num_expr
   18         | '+' num_expr
   19         | num_expr '+' num_expr
   20         | num_expr '-' num_expr
   21         | num_expr '*' num_expr
   22         | num_expr '/' num_expr
   23         | num_expr LT num_expr
   24         | num_expr GT num_expr
   25         | num_expr EQL num_expr
   26         | num_expr LTE num_expr
   27         | num_expr GTE num_expr
   28         | num_expr AND num_expr
   29         | num_expr OR num_expr
   30         | NOT num_expr
   31         | '(' num_expr ')'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 2 3 4
'%' (37)
'(' (40) 7 8 9 14 15 16 31
')' (41) 7 8 9 14 15 16 31
'*' (42) 21
'+' (43) 18 19
',' (44) 7 14
'-' (45) 17 20
'/' (47) 22
':' (58) 10
'=' (61) 6
'?' (63) 10
error (256)
GT (258) 24
LT (259) 23
GTE (260) 27
LTE (261) 26
EQL (262) 25
OR (263) 29
AND (264) 28
UNARY_PLUS (265)
UNARY_MINUS (266)
NOT (267) 30
NUM (268) 12
ID (269) 6 7 8 9 13 14 15 16
DEF (270) 7 8 9


Nonterminals, with rules where they appear

$accept (28)
    on left: 0
expr (29)
    on left: 1 2 3 4 5, on right: 0 1 2 3 4
define (30)
    on left: 6, on right: 1
define_func (31)
    on left: 7 8 9, on right: 2
cond (32)
    on left: 10 11, on right: 3 6 7 8 9 10
num_expr (33)
    on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30 31, on right: 10 11 14 15 17 18 19 20 21 22 23 24 25 26 27 28
    29 30 31


state 0

    0 $accept: . expr $end

    $default  reduce using rule 5 (expr)

    expr  go to state 1


state 1

    0 $accept: expr . $end
    1 expr: expr . define '\n'
    2     | expr . define_func '\n'
    3     | expr . cond '\n'
    4     | expr . '\n'

    $end  shift, and go to state 2
    '+'   shift, and go to state 3
    '-'   shift, and go to state 4
    NOT   shift, and go to state 5
    NUM   shift, and go to state 6
    ID    shift, and go to state 7
    DEF   shift, and go to state 8
    '\n'  shift, and go to state 9
    '('   shift, and go to state 10

    define       go to state 11
    define_func  go to state 12
    cond         go to state 13
    num_expr     go to state 14


state 2

    0 $accept: expr $end .

    $default  accept


state 3

   18 num_expr: '+' . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 16


state 4

   17 num_expr: '-' . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 17


state 5

   30 num_expr: NOT . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 18


state 6

   12 num_expr: NUM .

    $default  reduce using rule 12 (num_expr)


state 7

    6 define: ID . '=' cond
   13 num_expr: ID .
   14         | ID . '(' num_expr ',' num_expr ')'
   15         | ID . '(' num_expr ')'
   16         | ID . '(' ')'

    '='  shift, and go to state 19
    '('  shift, and go to state 20

    $default  reduce using rule 13 (num_expr)


state 8

    7 define_func: DEF . ID '(' ID ',' ID ')' cond
    8            | DEF . ID '(' ID ')' cond
    9            | DEF . ID '(' ')' cond

    ID  shift, and go to state 21


state 9

    4 expr: expr '\n' .

    $default  reduce using rule 4 (expr)


state 10

   31 num_expr: '(' . num_expr ')'

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 22


state 11

    1 expr: expr define . '\n'

    '\n'  shift, and go to state 23


state 12

    2 expr: expr define_func . '\n'

    '\n'  shift, and go to state 24


state 13

    3 expr: expr cond . '\n'

    '\n'  shift, and go to state 25


state 14

   10 cond: num_expr . '?' cond ':' cond
   11     | num_expr .
   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    GT   shift, and go to state 30
    LT   shift, and go to state 31
    GTE  shift, and go to state 32
    LTE  shift, and go to state 33
    EQL  shift, and go to state 34
    OR   shift, and go to state 35
    AND  shift, and go to state 36
    '?'  shift, and go to state 37

    $default  reduce using rule 11 (cond)


state 15

   13 num_expr: ID .
   14         | ID . '(' num_expr ',' num_expr ')'
   15         | ID . '(' num_expr ')'
   16         | ID . '(' ')'

    '('  shift, and go to state 20

    $default  reduce using rule 13 (num_expr)


state 16

   18 num_expr: '+' num_expr .
   19         | num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    $default  reduce using rule 18 (num_expr)


state 17

   17 num_expr: '-' num_expr .
   19         | num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    $default  reduce using rule 17 (num_expr)


state 18

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr
   30         | NOT num_expr .

    $default  reduce using rule 30 (num_expr)


state 19

    6 define: ID '=' . cond

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    cond      go to state 38
    num_expr  go to state 14


state 20

   14 num_expr: ID '(' . num_expr ',' num_expr ')'
   15         | ID '(' . num_expr ')'
   16         | ID '(' . ')'

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10
    ')'  shift, and go to state 39

    num_expr  go to state 40


state 21

    7 define_func: DEF ID . '(' ID ',' ID ')' cond
    8            | DEF ID . '(' ID ')' cond
    9            | DEF ID . '(' ')' cond

    '('  shift, and go to state 41


state 22

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr
   31         | '(' num_expr . ')'

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    GT   shift, and go to state 30
    LT   shift, and go to state 31
    GTE  shift, and go to state 32
    LTE  shift, and go to state 33
    EQL  shift, and go to state 34
    OR   shift, and go to state 35
    AND  shift, and go to state 36
    ')'  shift, and go to state 42


state 23

    1 expr: expr define '\n' .

    $default  reduce using rule 1 (expr)


state 24

    2 expr: expr define_func '\n' .

    $default  reduce using rule 2 (expr)


state 25

    3 expr: expr cond '\n' .

    $default  reduce using rule 3 (expr)


state 26

   19 num_expr: num_expr '+' . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 43


state 27

   20 num_expr: num_expr '-' . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 44


state 28

   21 num_expr: num_expr '*' . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 45


state 29

   22 num_expr: num_expr '/' . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 46


state 30

   24 num_expr: num_expr GT . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 47


state 31

   23 num_expr: num_expr LT . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 48


state 32

   27 num_expr: num_expr GTE . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 49


state 33

   26 num_expr: num_expr LTE . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 50


state 34

   25 num_expr: num_expr EQL . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 51


state 35

   29 num_expr: num_expr OR . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 52


state 36

   28 num_expr: num_expr AND . num_expr

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 53


state 37

   10 cond: num_expr '?' . cond ':' cond

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    cond      go to state 54
    num_expr  go to state 14


state 38

    6 define: ID '=' cond .

    $default  reduce using rule 6 (define)


state 39

   16 num_expr: ID '(' ')' .

    $default  reduce using rule 16 (num_expr)


state 40

   14 num_expr: ID '(' num_expr . ',' num_expr ')'
   15         | ID '(' num_expr . ')'
   19         | num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    GT   shift, and go to state 30
    LT   shift, and go to state 31
    GTE  shift, and go to state 32
    LTE  shift, and go to state 33
    EQL  shift, and go to state 34
    OR   shift, and go to state 35
    AND  shift, and go to state 36
    ','  shift, and go to state 55
    ')'  shift, and go to state 56


state 41

    7 define_func: DEF ID '(' . ID ',' ID ')' cond
    8            | DEF ID '(' . ID ')' cond
    9            | DEF ID '(' . ')' cond

    ID   shift, and go to state 57
    ')'  shift, and go to state 58


state 42

   31 num_expr: '(' num_expr ')' .

    $default  reduce using rule 31 (num_expr)


state 43

   19 num_expr: num_expr . '+' num_expr
   19         | num_expr '+' num_expr .
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    GT   shift, and go to state 30
    LT   shift, and go to state 31
    GTE  shift, and go to state 32
    LTE  shift, and go to state 33
    EQL  shift, and go to state 34
    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 19 (num_expr)


state 44

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   20         | num_expr '-' num_expr .
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    GT   shift, and go to state 30
    LT   shift, and go to state 31
    GTE  shift, and go to state 32
    LTE  shift, and go to state 33
    EQL  shift, and go to state 34
    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 20 (num_expr)


state 45

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   21         | num_expr '*' num_expr .
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    GT   shift, and go to state 30
    LT   shift, and go to state 31
    GTE  shift, and go to state 32
    LTE  shift, and go to state 33
    EQL  shift, and go to state 34
    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 21 (num_expr)


state 46

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   22         | num_expr '/' num_expr .
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    GT   shift, and go to state 30
    LT   shift, and go to state 31
    GTE  shift, and go to state 32
    LTE  shift, and go to state 33
    EQL  shift, and go to state 34
    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 22 (num_expr)


state 47

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   24         | num_expr GT num_expr .
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 24 (num_expr)


state 48

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   23         | num_expr LT num_expr .
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 23 (num_expr)


state 49

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   27         | num_expr GTE num_expr .
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 27 (num_expr)


state 50

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   26         | num_expr LTE num_expr .
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 26 (num_expr)


state 51

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   25         | num_expr EQL num_expr .
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    OR   shift, and go to state 35
    AND  shift, and go to state 36

    $default  reduce using rule 25 (num_expr)


state 52

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr
   29         | num_expr OR num_expr .

    $default  reduce using rule 29 (num_expr)


state 53

   19 num_expr: num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   28         | num_expr AND num_expr .
   29         | num_expr . OR num_expr

    $default  reduce using rule 28 (num_expr)


state 54

   10 cond: num_expr '?' cond . ':' cond

    ':'  shift, and go to state 59


state 55

   14 num_expr: ID '(' num_expr ',' . num_expr ')'

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    num_expr  go to state 60


state 56

   15 num_expr: ID '(' num_expr ')' .

    $default  reduce using rule 15 (num_expr)


state 57

    7 define_func: DEF ID '(' ID . ',' ID ')' cond
    8            | DEF ID '(' ID . ')' cond

    ','  shift, and go to state 61
    ')'  shift, and go to state 62


state 58

    9 define_func: DEF ID '(' ')' . cond

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    cond      go to state 63
    num_expr  go to state 14


state 59

   10 cond: num_expr '?' cond ':' . cond

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    cond      go to state 64
    num_expr  go to state 14


state 60

   14 num_expr: ID '(' num_expr ',' num_expr . ')'
   19         | num_expr . '+' num_expr
   20         | num_expr . '-' num_expr
   21         | num_expr . '*' num_expr
   22         | num_expr . '/' num_expr
   23         | num_expr . LT num_expr
   24         | num_expr . GT num_expr
   25         | num_expr . EQL num_expr
   26         | num_expr . LTE num_expr
   27         | num_expr . GTE num_expr
   28         | num_expr . AND num_expr
   29         | num_expr . OR num_expr

    '+'  shift, and go to state 26
    '-'  shift, and go to state 27
    '*'  shift, and go to state 28
    '/'  shift, and go to state 29
    GT   shift, and go to state 30
    LT   shift, and go to state 31
    GTE  shift, and go to state 32
    LTE  shift, and go to state 33
    EQL  shift, and go to state 34
    OR   shift, and go to state 35
    AND  shift, and go to state 36
    ')'  shift, and go to state 65


state 61

    7 define_func: DEF ID '(' ID ',' . ID ')' cond

    ID  shift, and go to state 66


state 62

    8 define_func: DEF ID '(' ID ')' . cond

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    cond      go to state 67
    num_expr  go to state 14


state 63

    9 define_func: DEF ID '(' ')' cond .

    $default  reduce using rule 9 (define_func)


state 64

   10 cond: num_expr '?' cond ':' cond .

    $default  reduce using rule 10 (cond)


state 65

   14 num_expr: ID '(' num_expr ',' num_expr ')' .

    $default  reduce using rule 14 (num_expr)


state 66

    7 define_func: DEF ID '(' ID ',' ID . ')' cond

    ')'  shift, and go to state 68


state 67

    8 define_func: DEF ID '(' ID ')' cond .

    $default  reduce using rule 8 (define_func)


state 68

    7 define_func: DEF ID '(' ID ',' ID ')' . cond

    '+'  shift, and go to state 3
    '-'  shift, and go to state 4
    NOT  shift, and go to state 5
    NUM  shift, and go to state 6
    ID   shift, and go to state 15
    '('  shift, and go to state 10

    cond      go to state 69
    num_expr  go to state 14


state 69

    7 define_func: DEF ID '(' ID ',' ID ')' cond .

    $default  reduce using rule 7 (define_func)
